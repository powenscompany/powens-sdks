/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.powens.sdk.model

import com.powens.sdk.model.LoanType
import com.powens.sdk.model.MonetaryValue

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Loan details
 *
 * @param totalAmount Total amount of the loan.
 * @param availableAmount Amount of the loan not yet released and still available.
 * @param usedAmount Amount of the load already used.
 * @param subscriptionDate Subscription date of the loan.
 * @param maturityDate Estimated end date of the loan.
 * @param nextPaymentAmount Amount of the next payment.
 * @param nextPaymentDate Date of the next payment.
 * @param rate Rate of the loan.
 * @param nbPaymentsLeft Number of payments still due.
 * @param nbPaymentsDone Number of payments done.
 * @param nbPaymentsTotal Total number of payments.
 * @param lastPaymentAmount Amount of the last payment.
 * @param lastPaymentDate Date of the last payment.
 * @param accountLabel Name of the debited account.
 * @param insuranceLabel Label of the insurance.
 * @param duration Duration of the loan, in months.
 * @param type 
 */
@Serializable

data class Loan (

    /* Total amount of the loan. */
    @SerialName(value = "total_amount") val totalAmount: MonetaryValue? = null,

    /* Amount of the loan not yet released and still available. */
    @SerialName(value = "available_amount") val availableAmount: MonetaryValue? = null,

    /* Amount of the load already used. */
    @SerialName(value = "used_amount") val usedAmount: MonetaryValue? = null,

    /* Subscription date of the loan. */
    @SerialName(value = "subscription_date") val subscriptionDate: kotlinx.datetime.LocalDate? = null,

    /* Estimated end date of the loan. */
    @SerialName(value = "maturity_date") val maturityDate: kotlinx.datetime.LocalDate? = null,

    /* Amount of the next payment. */
    @SerialName(value = "next_payment_amount") val nextPaymentAmount: MonetaryValue? = null,

    /* Date of the next payment. */
    @SerialName(value = "next_payment_date") val nextPaymentDate: kotlinx.datetime.LocalDate? = null,

    /* Rate of the loan. */
    @SerialName(value = "rate") val rate: kotlin.Double? = null,

    /* Number of payments still due. */
    @SerialName(value = "nb_payments_left") val nbPaymentsLeft: kotlin.Int? = null,

    /* Number of payments done. */
    @SerialName(value = "nb_payments_done") val nbPaymentsDone: kotlin.Int? = null,

    /* Total number of payments. */
    @SerialName(value = "nb_payments_total") val nbPaymentsTotal: kotlin.Int? = null,

    /* Amount of the last payment. */
    @SerialName(value = "last_payment_amount") val lastPaymentAmount: MonetaryValue? = null,

    /* Date of the last payment. */
    @SerialName(value = "last_payment_date") val lastPaymentDate: kotlinx.datetime.LocalDate? = null,

    /* Name of the debited account. */
    @SerialName(value = "account_label") val accountLabel: kotlin.String? = null,

    /* Label of the insurance. */
    @SerialName(value = "insurance_label") val insuranceLabel: kotlin.String? = null,

    /* Duration of the loan, in months. */
    @SerialName(value = "duration") val duration: kotlin.Int? = null,

    @SerialName(value = "type") val type: LoanType? = null

)


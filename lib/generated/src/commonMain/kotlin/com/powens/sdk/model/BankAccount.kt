/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.powens.sdk.model

import com.powens.sdk.model.BankAccountTypeName
import com.powens.sdk.model.BankAccountUsage
import com.powens.sdk.model.Connection
import com.powens.sdk.model.Currency
import com.powens.sdk.model.Loan
import com.powens.sdk.model.MonetaryValue

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A bank account.
 *
 * @param id 
 * @param connectionId 
 * @param userId 
 * @param idSource 
 * @param display Whether the bank account should be displayed and included in aggregated metrics.
 * @param name Display name of the account.
 * @param bookmarked Whether the bank account is bookmarked.
 * @param usage 
 * @param originalName Original name of the account, as exposed on the connector API or website.
 * @param type 
 * @param idType 
 * @param parentId 
 * @param balance The balance of the bank account.
 * @param coming Amount of coming operations not yet debited.
 * @param currency 
 * @param lastUpdate Last successful update of the account.
 * @param deleted If set, this account is not found on the website anymore.
 * @param disabled If set, this account has been disabled by user and will not be synchronized.
 * @param number The bank account number, if available.
 * @param iban The bank account IBAN, if available.
 * @param loan 
 * @param connection 
 */
@Serializable

data class BankAccount (

    @SerialName(value = "id") @Required val id: kotlin.ULong,

    @SerialName(value = "id_connection") @Required val connectionId: kotlin.ULong,

    @SerialName(value = "id_user") @Required val userId: kotlin.ULong,

    @SerialName(value = "id_source") @Required val idSource: kotlin.ULong,

    /* Whether the bank account should be displayed and included in aggregated metrics. */
    @SerialName(value = "display") @Required val display: kotlin.Boolean,

    /* Display name of the account. */
    @SerialName(value = "name") @Required val name: kotlin.String,

    /* Whether the bank account is bookmarked. */
    @SerialName(value = "bookmarked") @Required val bookmarked: kotlin.Boolean,

    @SerialName(value = "usage") @Required val usage: BankAccountUsage,

    /* Original name of the account, as exposed on the connector API or website. */
    @SerialName(value = "original_name") @Required val originalName: kotlin.String,

    @SerialName(value = "type") @Required val type: BankAccountTypeName,

    @SerialName(value = "id_type") @Required val idType: kotlin.ULong,

    @SerialName(value = "id_parent") val parentId: kotlin.ULong? = null,

    /* The balance of the bank account. */
    @SerialName(value = "balance") val balance: MonetaryValue? = null,

    /* Amount of coming operations not yet debited. */
    @SerialName(value = "coming") val coming: MonetaryValue? = null,

    @SerialName(value = "currency") val currency: Currency? = null,

    /* Last successful update of the account. */
    @SerialName(value = "last_update") val lastUpdate: kotlinx.datetime.LocalDateTime? = null,

    /* If set, this account is not found on the website anymore. */
    @SerialName(value = "deleted") val deleted: kotlinx.datetime.LocalDateTime? = null,

    /* If set, this account has been disabled by user and will not be synchronized. */
    @SerialName(value = "disabled") val disabled: kotlinx.datetime.LocalDateTime? = null,

    /* The bank account number, if available. */
    @SerialName(value = "number") val number: kotlin.String? = null,

    /* The bank account IBAN, if available. */
    @SerialName(value = "iban") val iban: kotlin.String? = null,

    @SerialName(value = "loan") val loan: Loan? = null,

    @SerialName(value = "connection") val connection: Connection? = null

)


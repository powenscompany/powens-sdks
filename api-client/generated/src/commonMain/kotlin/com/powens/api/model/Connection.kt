/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.powens.api.model

import com.powens.api.model.BankAccount
import com.powens.api.model.ConnectionConnector
import com.powens.api.model.ConnectionSource
import com.powens.api.model.ConnectionState
import com.powens.api.model.CredentialsField

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A connection materializes the link between a user and a connector.
 *
 * @param id ID of the connection.
 * @param idConnector ID of the related connector.
 * @param created Creation date of the connection.
 * @param active Whether this connection is active and will be automatically synced.
 * @param idUser ID of the related user.
 * @param idProvider ID of the provider.
 * @param idBank ID of the bank.
 * @param state 
 * @param error 
 * @param errorMessage If the last update failed, an optional message from the connector to guide the user into recovering from the error.
 * @param fields For connections in an error state, an optional list of form fields that must be prompted to the end-user.
 * @param lastUpdate Last successful update.
 * @param lastPush Last successful push.
 * @param expire Highest value among expiration dates of connection sources.
 * @param connectorUuid UUID of the connector. Required if `id_connector` is not provided.
 * @param nextTry Scheduled date of next synchronization.
 * @param connector 
 * @param sources Optional `expand`: The details of the sources configured for the connection.
 * @param accounts Optional `expand`: The list of activated bank accounts associated with the connection (disabled accounts are omitted).
 * @param allAccounts Optional `expand`: The list of all bank accounts associated with the connection, including disabled ones.
 */
@Serializable

data class Connection (

    /* ID of the connection. */
    @SerialName(value = "id") @Required val id: kotlin.Long,

    /* ID of the related connector. */
    @SerialName(value = "id_connector") @Required val idConnector: kotlin.Long,

    /* Creation date of the connection. */
    @SerialName(value = "created") @Required val created: kotlin.String,

    /* Whether this connection is active and will be automatically synced. */
    @SerialName(value = "active") @Required val active: kotlin.Boolean,

    /* ID of the related user. */
    @SerialName(value = "id_user") val idUser: kotlin.Long? = null,

    /* ID of the provider. */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "id_provider") val idProvider: kotlin.Long? = null,

    /* ID of the bank. */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "id_bank") val idBank: kotlin.Long? = null,

    @SerialName(value = "state") val state: ConnectionState? = null,

    @SerialName(value = "error") val error: ConnectionState? = null,

    /* If the last update failed, an optional message from the connector to guide the user into recovering from the error. */
    @SerialName(value = "error_message") val errorMessage: kotlin.String? = null,

    /* For connections in an error state, an optional list of form fields that must be prompted to the end-user. */
    @SerialName(value = "fields") val fields: kotlin.collections.List<CredentialsField>? = null,

    /* Last successful update. */
    @SerialName(value = "last_update") val lastUpdate: kotlin.String? = null,

    /* Last successful push. */
    @SerialName(value = "last_push") val lastPush: kotlin.String? = null,

    /* Highest value among expiration dates of connection sources. */
    @SerialName(value = "expire") val expire: kotlin.String? = null,

    /* UUID of the connector. Required if `id_connector` is not provided. */
    @SerialName(value = "connector_uuid") val connectorUuid: kotlin.String? = null,

    /* Scheduled date of next synchronization. */
    @SerialName(value = "next_try") val nextTry: kotlin.String? = null,

    @SerialName(value = "connector") val connector: ConnectionConnector? = null,

    /* Optional `expand`: The details of the sources configured for the connection. */
    @SerialName(value = "sources") val sources: kotlin.collections.List<ConnectionSource>? = null,

    /* Optional `expand`: The list of activated bank accounts associated with the connection (disabled accounts are omitted). */
    @SerialName(value = "accounts") val accounts: kotlin.collections.List<BankAccount>? = null,

    /* Optional `expand`: The list of all bank accounts associated with the connection, including disabled ones. */
    @SerialName(value = "all_accounts") val allAccounts: kotlin.collections.List<BankAccount>? = null

)


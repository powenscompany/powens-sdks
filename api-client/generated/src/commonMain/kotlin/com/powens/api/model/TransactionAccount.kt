/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.powens.api.model

import com.powens.api.model.BankAccountTypeName
import com.powens.api.model.BankAccountUsage
import com.powens.api.model.Connection
import com.powens.api.model.Currency

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Optional `expand`: The bank account associated with this transaction.
 *
 * @param id ID of the bank account.
 * @param idConnection ID of the related connection.
 * @param idUser ID of the related user.
 * @param idSource ID of the related connection source.
 * @param originalName Original name of the account, as exposed on the connector API or website.
 * @param type 
 * @param idType Bank account type
 * @param display Whether the bank account should be displayed and included in aggregated metrics.
 * @param name Display name of the account.
 * @param bookmarked Whether the bank account is bookmarked.
 * @param usage 
 * @param idParent ID of the parent account, if any.
 * @param balance The balance of the bank account.
 * @param coming Amount of coming operations not yet debited.
 * @param currency Currency of the bank account.
 * @param lastUpdate Last successful update of the account.
 * @param deleted If set, this account is not found on the website anymore.
 * @param disabled Whether the bank account should be synchronized.
 * @param number The bank account number, if available.
 * @param iban The bank account IBAN, if available.
 * @param loan For `loan` accounts, the loan details.
 * @param connection Optional `expand`: The connection associated with this bank account.
 */
@Serializable

data class TransactionAccount (

    /* ID of the bank account. */
    @SerialName(value = "id") @Required val id: kotlin.Long,

    /* ID of the related connection. */
    @SerialName(value = "id_connection") @Required val idConnection: kotlin.Long,

    /* ID of the related user. */
    @SerialName(value = "id_user") @Required val idUser: kotlin.Long,

    /* ID of the related connection source. */
    @SerialName(value = "id_source") @Required val idSource: kotlin.Long,

    /* Original name of the account, as exposed on the connector API or website. */
    @SerialName(value = "original_name") @Required val originalName: kotlin.String,

    @SerialName(value = "type") @Required val type: BankAccountTypeName,

    /* Bank account type */
    @SerialName(value = "id_type") @Required val idType: kotlin.Long,

    /* Whether the bank account should be displayed and included in aggregated metrics. */
    @SerialName(value = "display") @Required val display: kotlin.Boolean,

    /* Display name of the account. */
    @SerialName(value = "name") @Required val name: kotlin.String,

    /* Whether the bank account is bookmarked. */
    @SerialName(value = "bookmarked") @Required val bookmarked: kotlin.Boolean,

    @SerialName(value = "usage") @Required val usage: BankAccountUsage,

    /* ID of the parent account, if any. */
    @SerialName(value = "id_parent") val idParent: kotlin.Long? = null,

    /* The balance of the bank account. */
    @SerialName(value = "balance") val balance: kotlin.Double? = null,

    /* Amount of coming operations not yet debited. */
    @SerialName(value = "coming") val coming: kotlin.Double? = null,

    /* Currency of the bank account. */
    @SerialName(value = "currency") val currency: Currency? = null,

    /* Last successful update of the account. */
    @SerialName(value = "last_update") val lastUpdate: kotlin.String? = null,

    /* If set, this account is not found on the website anymore. */
    @SerialName(value = "deleted") val deleted: kotlin.String? = null,

    /* Whether the bank account should be synchronized. */
    @SerialName(value = "disabled") val disabled: kotlin.Boolean? = null,

    /* The bank account number, if available. */
    @SerialName(value = "number") val number: kotlin.String? = null,

    /* The bank account IBAN, if available. */
    @SerialName(value = "iban") val iban: kotlin.String? = null,

    /* For `loan` accounts, the loan details. */
    @SerialName(value = "loan") val loan: kotlin.String? = null,

    /* Optional `expand`: The connection associated with this bank account. */
    @SerialName(value = "connection") val connection: Connection? = null

)


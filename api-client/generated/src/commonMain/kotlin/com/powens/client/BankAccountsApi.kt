/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.powens.client

import com.powens.api.model.BankAccount
import com.powens.api.model.BankAccountUpdateRequest
import com.powens.api.model.BankAccountsList
import com.powens.api.model.Error

import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class BankAccountsApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * Bank account
     * Get a single bank account of the authenticated user by ID.
     * @param accountId Bank account ID.
     * @param all Flag to include disabled and deleted items in the list. (optional)
     * @param expand  (optional)
     * @return BankAccount
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getUserAccount(accountId: kotlin.Long, all: kotlin.Boolean? = null, expand: kotlin.collections.List<kotlin.String>? = null): HttpResponse<BankAccount> {

        val localVariableAuthNames = listOf<String>("bi_auth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        all?.apply { localVariableQuery["all"] = listOf("$all") }
        expand?.apply { localVariableQuery["expand"] = toMultiValue(this, "csv") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/users/me/accounts/{accountId}".replace("{" + "accountId" + "}", "$accountId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * List bank accounts
     * List bank accounts of the authenticated user. By default, only active (not &#x60;deleted&#x60;) accounts are returned, use the &#x60;all&#x60; parameter to get the full list.
     * @param all Flag to include disabled and deleted items in the list. (optional)
     * @param expand  (optional)
     * @return BankAccountsList
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun listUserAccounts(all: kotlin.Boolean? = null, expand: kotlin.collections.List<kotlin.String>? = null): HttpResponse<BankAccountsList> {

        val localVariableAuthNames = listOf<String>("bi_auth")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        all?.apply { localVariableQuery["all"] = listOf("$all") }
        expand?.apply { localVariableQuery["expand"] = toMultiValue(this, "csv") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/users/me/accounts",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Update a bank account
     * Update a bank account. The resource mirrors bank accounts available through the connector, so editing is limited to metadata.
     * @param accountId Bank account ID.
     * @param bankAccountUpdateRequest 
     * @param all Flag to include disabled and deleted items in the list. (optional)
     * @param expand  (optional)
     * @return BankAccount
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun updateUserAccount(accountId: kotlin.Long, bankAccountUpdateRequest: BankAccountUpdateRequest, all: kotlin.Boolean? = null, expand: kotlin.collections.List<kotlin.String>? = null): HttpResponse<BankAccount> {

        val localVariableAuthNames = listOf<String>("bi_auth")

        val localVariableBody = bankAccountUpdateRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
        all?.apply { localVariableQuery["all"] = listOf("$all") }
        expand?.apply { localVariableQuery["expand"] = toMultiValue(this, "csv") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/users/me/accounts/{accountId}".replace("{" + "accountId" + "}", "$accountId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



}
